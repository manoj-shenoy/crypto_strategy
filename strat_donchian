import ccxt
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# import pyfolio as pf
import csv; import datetime; import pytz
from technical_indicators import DONCH
from historical_data import exchange_data,write_to_csv,to_unix_time
import backtest

# ==========Initial trade parameters =============
symbol = 'BTC/USD'
timeframe = '1d'
trading_qty = 1.0
since = '2018-01-01 00:00:00'
hist_start_date = int(to_unix_time(since))
header = ['Timestamp', 'Open', 'High', 'Low', 'Close', 'Volume']
period = 20

# ==========Initial exchange parameters =============
kraken = exchange_data('kraken', 'BTC/USD', timeframe=timeframe, since=hist_start_date)
write_to_csv(kraken,'BTC/USD','kraken')

data = pd.DataFrame(kraken, columns=header)
print(data.head())

# ============ Strategy Function - Donchian Bands crossover ================
upper_donch, lower_donch = DONCH(data, period)

def strategy(data, periods):

    data['returns'] = np.log(data['Close'].shift(1)/data['Close'])
    data['position'] = 0  # pd.Series(np.random.randn(len(data)), index=data.index)

    for row in range(1, len(data)):
        if data['Close'].iloc[row] > upper_donch.iloc[row]:
            data['position'].iloc[row] = 1
        elif data['Close'].iloc[row] < lower_donch.iloc[row]:
            data['position'].iloc[row] = -1

        while data['position'].iloc[row - 1] == 1 and data['Close'].iloc[row] > lower_donch.iloc[row]:
            data['position'].iloc[row] = 1

        while (data['position'].iloc[row - 1] == -1) and (data['Close'].iloc[row] < upper_donch.iloc[row]):
            data['position'].iloc[row] = -1

    data['strat_returns'] = data['position'].shift(1) * data['returns']
    data['cum_returns'] = data['strat_returns'].dropna().cumsum().apply(np.exp)

    return data['strat_returns']

returns = strategy(data, period)
backtest.drawdown_periods(returns)
backtest.underwater_plot(returns)
